<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
  <!--
    启动流程：
    (1) 当web服务器启动的时候，tomcat会自动寻找项目工程中web.xml文件
    (2) 读取此xml配置文件中的核心几项配置 (Spring、Springmvc)
    (3) 当读取到spring配置项以后，会检查spring ioc的xml文件在哪里，继续去读取spring ioc xml文件
    (4) 当读取到ioc文件之后，会自动激活spring ioc容器初始化(依次开始执行springioc xml文件中的内容)
    (5) 完成数据库连接操作
    (6) 把数据库连接对象注入到mybatis session 工厂中(加载到ioc容器中)
    (7) 接着读取mybatis.xml中配置信息
    (8) 读取所有的数据库表对应的映射的mapper XML文件
    (9) 读取配置好的mapper 接口包路径，加载所有的接口对象(加载到ioc容器中)
    (10) 读取所有的逻辑服务类service(加载到ioc容器中)
    (11) 初始化事务管理   到此为止 spring ioc初始化完毕
  -->

  <!--Spring核心监听器 -->
  <!--在服务器启动时加载Spring容器，且只会加载一次 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring_ioc.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!--配置springmvc -->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--配置初始化参数：作用是配置SpringMVC配置文件的位置和名称 -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring_mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <multipart-config>
      <max-file-size>52428800</max-file-size>
      <max-request-size>52428800</max-request-size>
      <file-size-threshold>0</file-size-threshold>
    </multipart-config>
  </servlet>

  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!--配置由Spring 提供的针对中文乱码的编码过滤器 -->
  <!-- 编码过滤器 -->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <welcome-file-list>
    <welcome-file>home/login.html</welcome-file>
  </welcome-file-list>
</web-app>